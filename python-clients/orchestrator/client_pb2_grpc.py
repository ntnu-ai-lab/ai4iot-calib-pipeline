# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import client_pb2 as client__pb2
from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2


class DataClientStub(object):
    """Define the service
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.init_client = channel.unary_unary(
                '/data_client.DataClient/init_client',
                request_serializer=client__pb2.ClientInitRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )
        self.get_last_data = channel.unary_unary(
                '/data_client.DataClient/get_last_data',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=client__pb2.DataSample.FromString,
                )


class DataClientServicer(object):
    """Define the service
    """

    def init_client(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def get_last_data(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_DataClientServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'init_client': grpc.unary_unary_rpc_method_handler(
                    servicer.init_client,
                    request_deserializer=client__pb2.ClientInitRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'get_last_data': grpc.unary_unary_rpc_method_handler(
                    servicer.get_last_data,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=client__pb2.DataSample.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'data_client.DataClient', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class DataClient(object):
    """Define the service
    """

    @staticmethod
    def init_client(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/data_client.DataClient/init_client',
            client__pb2.ClientInitRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def get_last_data(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/data_client.DataClient/get_last_data',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            client__pb2.DataSample.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
